{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","info","setInfo","country","setCountry","url","getData","a","axios","get","response","console","log","data","useEffect","className","style","margin","onSubmit","e","preventDefault","type","name","onChange","target","value","autoFocus","map","index","src","flags","png","alt","common","capital","borders","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,6BC+EAA,MA1Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIPC,EAAG,8CAA0CF,GAE7CG,EAAO,uCAAG,4BAAAC,EAAA,sEACSC,IAAMC,IAAIJ,GADnB,OACRK,EADQ,OAEdC,QAAQC,IAAIF,EAASG,MACrBX,EAAQQ,EAASG,MAHH,2CAAH,qDAoBb,OAVAC,qBAAU,WACRR,MACC,IAMHK,QAAQC,IAAIX,GAGV,sBAAKc,UAAU,MAAf,8BAEE,uBAAMC,MAAO,CAAEC,OAAQ,QAAUC,SAThB,SAACC,GACpBA,EAAEC,iBACFd,KAOE,iCAEE,uBAAOe,KAAK,OAAOC,KAAK,UAAUC,SAnBnB,SAACJ,GACpBf,EAAWe,EAAEK,OAAOC,OACpBd,QAAQC,IAAIT,IAiBkDuB,WAAS,IACnE,wBAAQL,KAAK,SAAb,uBALJ,OAOGpB,QAPH,IAOGA,OAPH,EAOGA,EAAM0B,KAAI,SAACxB,EAASyB,GAAV,iBACT,sBAAKb,UAAU,OAAf,UACE,8BACG,IAEC,qBACEC,MAAO,CAAEC,OAAQ,QACjBY,IAAG,OAAE1B,QAAF,IAAEA,GAAF,UAAEA,EAAS2B,aAAX,aAAE,EAAgBC,IACrBC,IAAI,YAIV,sBAAKjB,UAAU,WAAf,UACE,sBAAKA,UAAU,UAAf,UACG,IADH,qBAEcZ,QAFd,IAEcA,GAFd,UAEcA,EAASmB,YAFvB,aAEc,EAAeW,OAF7B,YAEuC9B,QAFvC,IAEuCA,OAFvC,EAEuCA,EAAS+B,QAAS,OAMzD,8BACG,IADH,qBAEc/B,QAFd,IAEcA,GAFd,UAEcA,EAASmB,YAFvB,aAEc,EAAeW,OAF7B,IAGG9B,EAAQgC,QAAQR,KAAI,SAACS,EAAQR,GAC5B,OACE,8BACG,IACAA,EAAQ,EAFX,IAEeQ,wBCvDlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2844f4c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [info, setInfo] = useState([]);\n  const [country, setCountry] = useState(\"\");\n\n  const url = `https://restcountries.com/v3.1/name/${country}`;\n\n  const getData = async () => {\n    const response = await axios.get(url);\n    console.log(response.data);\n    setInfo(response.data);\n  };\n\n  const handleChange = (e) => {\n    setCountry(e.target.value);\n    console.log(country);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n  console.log(info);\n\n  return (\n    <div className=\"App\">\n      Data of Countries\n      <form style={{ margin: \"2rem\" }} onSubmit={handleSubmit}>\n        Enter Country Name :\n        <input type=\"text\" name=\"country\" onChange={handleChange} autoFocus />\n        <button type=\"submit\">Submit</button>\n      </form>\n      {info?.map((country, index) => (\n        <div className=\"Main\">\n          <p>\n            {\" \"}\n            {\n              <img\n                style={{ margin: \"2rem\" }}\n                src={country?.flags?.png}\n                alt=\"flag\"\n              />\n            }\n          </p>\n          <div className=\"infopart\">\n            <div className=\"Capital\">\n              {\" \"}\n              Capital of {country?.name?.common}: {country?.capital}{\" \"}\n            </div>\n            {/* <p>\n            {\" \"}\n            Languages of {country?.name?.common}: {country?.languages}\n          </p> */}\n            <p>\n              {\" \"}\n              Borders of {country?.name?.common}:\n              {country.borders.map((border, index) => {\n                return (\n                  <p>\n                    {\" \"}\n                    {index + 1}-{border}\n                  </p>\n                );\n              })}\n            </p>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}